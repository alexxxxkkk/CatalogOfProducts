<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByPage($page = 1,
                               $items = 8,
                               $sort_by_field = 'id',
                               $order = 'asc',
                               $filter_by_field = null,
                               $pattern = null)
    {
        if ($filter_by_field == null && $pattern == null) {
            $categories = $this->_em
                ->createQueryBuilder()
                ->select('u')
                ->from('AppBundle:User', 'u')
                ->orderBy('u.' . $sort_by_field, $order)
                ->setFirstResult(($page - 1) * $items)
                ->setMaxResults($items)
                ->getQuery()
                ->getResult();
        } else {
            $categories = $this->_em
                ->createQueryBuilder()
                ->select('u')
                ->from('AppBundle:User', 'u')
                ->where('u.' . $filter_by_field . ' = :name')
                ->setParameter('name', $pattern)
                ->orderBy('cat.' . $sort_by_field, $order)
                ->setFirstResult(($page - 1) * $items)
                ->setMaxResults($items)
                ->getQuery()
                ->getResult();
        }

        return $categories;
    }

    public function countRows(
        $filter_by_field = null,
        $pattern = null)
    {
        if ($filter_by_field == null && $pattern == null) {
            $length = $this->_em
                ->createQueryBuilder()
                ->select('count(u.id)')
                ->from('AppBundle:User', 'u')
                ->getQuery()->getSingleScalarResult();
        } else {
            $length = $this->_em
                ->createQueryBuilder()
                ->select('count(u.id)')
                ->from('AppBundle:User', 'u')
                ->where('u.' . $filter_by_field . ' = :name')
                ->setParameter('name', $pattern)
                ->getQuery()->getSingleScalarResult();
        }

        return $length;
    }
}
