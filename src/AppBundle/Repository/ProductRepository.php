<?php

namespace AppBundle\Repository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{
    public function isExist(array $options, $id): bool
    {
        $em = $this->getEntityManager();
        $productByName = $em->getRepository('AppBundle:Product')->findOneBy($options);

        if ($productByName != null) {
            if ($productByName->getId() != $id) {
                return true;
            }
        }

        return false;
    }

    public function findByPage($page = 1,
                               $items = 8,
                               $sortbyfield = null,
                               $order = null,
                               $filterbyfield = null,
                               $pattern = null)
    {
        $products = $this->_em
            ->createQueryBuilder()
            ->select('p')
            ->from('AppBundle:Product', 'p')
            ->setFirstResult(($page - 1) * $items)
            ->setMaxResults($items)
            ->getQuery()
            ->getResult();

        /*if ($sortbyfield != null && $order != null) {
            $query->orderBy('p.' . $sortbyfield, $order);
        }

        if ($filterbyfield != null && $pattern != null) {
            $query->where('p.' . $filterbyfield . ' = ' . $pattern);
        }

        $query
            ->setFirstResult(($page - 1) * $items)
            ->setMaxResults($items)
            ->getQuery();

        $products = $query->getResult();*/

        return $products;
    }

    public function getByCategory($category_id)
    {
        $products = $this->_em
            ->createQueryBuilder()
            ->select('p')
            ->from('AppBundle:Product', 'p')
            ->where('p.category.id = ' . $category_id)
            ->getQuery();

        return $products;
    }
}
